services:
  web:
    build:
      context: .
    container_name: django-app
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static:/var/www/static       # هماهنگ با STATIC_ROOT
      - media:/var/www/media         # هماهنگ با MEDIA_ROOT
      - protected_videos:/var/protected_videos
    env_file:
      - .env
    environment:
      - DJANGO_SECRET_KEY=${DOCKER_COMPOSE_DJANGO_SECRET_KEY}
      - DJANGO_DEBUG=${DOCKER_COMPOSE_DJANGO_DEBUG}
      - DJANGO_ZARINPAL_MERCHANT_ID=${DOCKER_COMPOSE_DJANGO_ZARINPAL_MERCHANT_ID}
      - DJANGO_POSTGRES_USER=${DOCKER_COMPOSE_DJANGO_POSTGRES_USER}
      - DJANGO_POSTGRES_NAME=${DOCKER_COMPOSE_DJANGO_POSTGRES_NAME}
      - DJANGO_POSTGRES_PASSWORD=${DOCKER_COMPOSE_DJANGO_POSTGRES_PASSWORD}
      - DJANGO_EMAIL_HOST_USER=${DOCKER_COMPOSE_DJANGO_DJANGO_EMAIL_HOST_USER}
      - DJANGO_EMAIL_HOST_PASSWORD=${DOCKER_COMPOSE_DJANGO_EMAIL_HOST_PASSWORD}
    depends_on:
      - db
    expose:
      - 8000
    networks:
      - tisa_bridge

  db:
    image: postgres:16
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_USER: ${DOCKER_COMPOSE_DJANGO_POSTGRES_USER}
      POSTGRES_PASSWORD: ${DOCKER_COMPOSE_DJANGO_POSTGRES_PASSWORD}
      POSTGRES_DB: ${DOCKER_COMPOSE_DJANGO_POSTGRES_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - tisa_bridge

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - static:/var/www/static       # هماهنگ با STATIC_ROOT
      - media:/var/www/media         # هماهنگ با MEDIA_ROOT
      - protected_videos:/var/protected_videos:ro
    depends_on:
      - web
    networks:
      - tisa_bridge

volumes:
  postgres_data:
  static:
  media:
  protected_videos:

networks:
  tisa_bridge:
    driver: bridge
